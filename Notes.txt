=======================================================================================================================
Checkers - CLI based Checkers Game.
basic rules:
    1. 2 players
        a. Red
        b. Black
    2. Black player moves first
    3. One board per game
    4. 12 pieces for each player
    5. Players place their pieces on the 12 dark squares in the first three rows closest to player.
    6. Each of these rows should have a total of 4 pieces.
    7. The back row (row closest to the player) is the KING ROW.
    8. Pieces may only move 1 diagonal place forward towards their opponet.
    9. Pieces must stay on the dark squares.
    10. Capturing pieces is achieved by jumping over it.
    11. The space on the other side of the piece you intend to capture must be empty.
    12. You can chain together jumps as long as the above criteria is met.
    13. If your piece makes it to the very back row you make re-take one capture piece and crown the piece you made it
    to the other side of the board with. This is piece is no a King piece.
    14. King pieces may still only move one space at a time during non-capturing moves. However, when capturing pieces
    the king can move diagonally forward or backwards.
    15. There is no limit to the amount of king pieces a player may have.
=======================================================================================================================
Summary: In order to play checkers we need at a minimum 4 physical things:
    1. A red player.
    2. A black player
    3. Game pieces.
    4. A game board.

We would at least need the following classes to accomplish this.
    1. Player
    2. GamePieces
    3. GameBoard.

If we think about this more deeply, we can actually seperate these out further. The goal should be to abstract as much
as reasonably possible.

We need to create at least the above so we can have a game of checkers.
=======================================================================================================================
Board:

    What is a board? It's a square piece of material (cardboard, wood, metal, anything we can make a square from). The
    board is a grid of 8 rows, and 8 columns. The intersection of a column and row create a "spot" or "square". White
    or "light" square are not used. Dark squares can contain pieces.

    Thinking like this we would have 2 classes related to the board.

    A Board class, and a Square class. The board would use Squares to construct a game surface for us to plan on.

    Our board needs the following basic features.

        1. We need to be able to "create" a board. Even if it's empty.

        2. We need to be able to set the board up to the default starting positon for all pieces.

        3. At any time we need to be able to print the board out and display it's current state: where all the pieces are.

    To accomplish this our Board class would rely on a Square class. This Square class would be used to build out our
    rows and columns. It would also be used to display and "hold" pieces. At anytime I should be able to call something
    like:
        Square.getPiece();

    This is an over simplificaiton, but it's the heart of what we need. That should return to us whether a regular
    piece, king piece or no piece is on it. We should also be able to determine what "player" controls that piece (red
    or black).